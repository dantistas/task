{"version":3,"sources":["components/NavBar.tsx","components/DrawerComponent.tsx","components/CVETable.tsx","components/Chart.tsx","components/ChartAndTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","props","filteredDataByCVEID","classes","useState","searchValue","setSearchValue","drawerOpenState","setDrawerOpenState","setFoundByCVEID","data","className","AppBar","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","noWrap","InputBase","placeholder","root","input","value","inputProps","onChange","event","cveID","target","filter","cveItem","cve","CVE_data_meta","ID","toLocaleLowerCase","includes","endAdornment","InputAdornment","fontSize","drawer","flexShrink","drawerPaper","top","drawerContainer","overflow","content","formControl","margin","minWidth","buttons","DrawerComponent","filteredData","setCveItemsToShow","cveItemsToShow","dates","baseSeverityState","minor","major","critical","year","setYear","severity","setSeverity","handleCheckboxChange","name","checked","Drawer","anchor","open","transitionDuration","paper","List","ListItem","FormControl","Select","id","map","index","MenuItem","Divider","FormControlLabel","control","Checkbox","label","labelPlacement","Button","minorSeverityCriteria","majorSeverityCriteria","criticalSeverityCriteria","publishedDate","split","impact","hasOwnProperty","baseMetricV2","item","columns","container","maxHeight","CVETable","foundByCVEID","React","page","setPage","rowsPerPage","setRowsPerPage","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","align","style","TableBody","length","slice","row","hover","role","tabIndex","description","description_data","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","Chart","xLabels","byMonth","parseInt","labels","datasets","fill","borderColor","type","options","scales","yAxes","ticks","beginAtZero","ChartAndTable","App","setData","setDates","useEffect","a","axios","get","DataFromApi","allDates","CVE_Items","uniqueDates","Set","Array","from","sort","console","error","fetchData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0631216d.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { CVE_Item } from \"../types\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    \r\n  }),\r\n);\r\ninterface Props {\r\n    drawerOpenState: boolean;\r\n    setDrawerOpenState: any;\r\n    setFoundByCVEID: any;\r\n    data:CVE_Item[] | undefined;\r\n  }\r\n\r\nconst NavBar: React.FC<Props> = (props:Props) => {\r\n  const classes = useStyles();\r\n  const [searchValue, setSearchValue] = useState<string>('')\r\n  const { drawerOpenState, setDrawerOpenState, setFoundByCVEID, data } = props;\r\n\r\n  let filteredDataByCVEID: CVE_Item[] | undefined\r\n\r\n\r\n  //search trough data by cve-id string\r\n  const searchByCVE = (cveID:string) => {\r\n    setSearchValue(cveID)\r\n    filteredDataByCVEID = data?.filter((cveItem)=>(cveItem.cve.CVE_data_meta.ID.toLocaleLowerCase().includes(cveID.toLocaleLowerCase())))  \r\n    setFoundByCVEID(filteredDataByCVEID)\r\n  }\r\n\r\n  // resets search field and also sets foundbySearchCVE\r\n\r\n  const resetSearch = () => {\r\n    setSearchValue('')\r\n    setFoundByCVEID(null)\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open-drawer\"\r\n            onClick={() => setDrawerOpenState(!drawerOpenState)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            CVE-ANALYSIS\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search by CVE-ID\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              value={searchValue}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={(event) => {searchByCVE(event.target.value)}}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={()=>{resetSearch()}}\r\n                  >\r\n                    <ClearIcon fontSize=\"small\"  color=\"primary\"/>\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default NavBar","import React, {useState} from 'react';\r\nimport { CVE_Item } from \"../types\";\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex', // sita nutrinti jeigu noresi\r\n    },\r\n    drawer: {\r\n      width: 240,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      height: 'calc(100% - 64px)',\r\n      top: 64,\r\n      width:240,\r\n      [theme.breakpoints.up('xs')]: {\r\n        top: 56,\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        top: 64,\r\n      }\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    buttons: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Props {\r\n  data:CVE_Item[] | undefined;\r\n  cveItemsToShow:CVE_Item[] | undefined;\r\n  setCveItemsToShow:any;\r\n  drawerOpenState: boolean;\r\n  dates:string[];\r\n}\r\n\r\ninterface Severity {\r\n  minor:boolean;\r\n  major:boolean;\r\n  critical: boolean\r\n}\r\n\r\nconst DrawerComponent: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { data, cveItemsToShow, setCveItemsToShow, drawerOpenState, dates, } = props;\r\n\r\n  const baseSeverityState = {\r\n    minor: false,\r\n    major: false,\r\n    critical: false,\r\n  };\r\n\r\n  const [year, setYear] = useState<string | null>(null)\r\n  const [severity, setSeverity] = useState<Severity>(baseSeverityState)\r\n\r\n  //updates only values wich are checked in the checkbox\r\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSeverity({ ...severity, [event.target.name]: event.target.checked });\r\n  }\r\n  //resets state and updates cveItemsToshow on reset button click\r\n  const resetState = () => {\r\n    setSeverity(baseSeverityState)\r\n    setYear(null)\r\n    setCveItemsToShow(data)\r\n  }\r\n\r\n  let filteredData:CVE_Item[] | undefined ;\r\n\r\n  const filterData = () => {\r\n    //severity search criteria based on checkbox selection\r\n    const minorSeverityCriteria = severity.minor === true ? \"LOW\" : null\r\n    const majorSeverityCriteria = severity.major === true ? \"MEDIUM\" : null\r\n    const criticalSeverityCriteria = severity.critical === true ? \"HIGH\" : null\r\n\r\n    //filter based on year and sverity \r\n    if( year && ( minorSeverityCriteria || majorSeverityCriteria || criticalSeverityCriteria )){\r\n      filteredData = data?.filter((cveItem)=>(cveItem.publishedDate.split(\"-\")[0] === year && cveItem.impact.hasOwnProperty('baseMetricV2') && (cveItem.impact.baseMetricV2.severity === minorSeverityCriteria || cveItem.impact.baseMetricV2.severity ===  majorSeverityCriteria || cveItem.impact.baseMetricV2.severity === criticalSeverityCriteria ) ))\r\n    //filter based on year only \r\n    } else if (year){\r\n      filteredData = data?.filter((cveItem)=>(cveItem.publishedDate.split(\"-\")[0] === year))\r\n    //filter based on severity only \r\n    }else if((minorSeverityCriteria || majorSeverityCriteria || criticalSeverityCriteria) && !year ){\r\n      filteredData = data?.filter((item) => (item.impact.hasOwnProperty('baseMetricV2') && (item.impact.baseMetricV2.severity === minorSeverityCriteria || item.impact.baseMetricV2.severity === majorSeverityCriteria || item.impact.baseMetricV2.severity === criticalSeverityCriteria)  ));\r\n    }else{\r\n      filteredData = data\r\n    }\r\n    //sets filtered data to the state cveItemsToShow \r\n    setCveItemsToShow(filteredData)  \r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={drawerOpenState}\r\n        className={classes.drawer}\r\n        variant={!drawerOpenState ? \"temporary\" : \"persistent\"}\r\n        transitionDuration={500}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerContainer}>\r\n          <div>\r\n            <List>\r\n              <ListItem>\r\n                <FormControl className={classes.formControl}>\r\n                  <Typography>SELECT YEAR</Typography>\r\n                  <Select\r\n                    id=\"select\"\r\n                    value={year}\r\n                    onChange={(event) => {\r\n                      setYear(event.target.value as string);\r\n                    }}\r\n                  >\r\n                    {dates.map((year, index) => (\r\n                      <MenuItem value={year}>{year}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              <ListItem>\r\n                <FormControl className={classes.formControl}>\r\n                  <Typography>SELECT SEVERITY</Typography>\r\n                  <FormControlLabel\r\n                    value=\"minor\"\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        checked={severity.minor}\r\n                        onChange={handleCheckboxChange}\r\n                        name=\"minor\"\r\n                      />\r\n                    }\r\n                    label=\"Minor\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"major\"\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        checked={severity.major}\r\n                        onChange={handleCheckboxChange}\r\n                        name=\"major\"\r\n                      />\r\n                    }\r\n                    label=\"Major\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"critical\"\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        checked={severity.critical}\r\n                        onChange={handleCheckboxChange}\r\n                        name=\"critical\"\r\n                      />\r\n                    }\r\n                    label=\"Critical\"\r\n                    labelPlacement=\"end\"\r\n                  />\r\n                </FormControl>\r\n              </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              <ListItem>\r\n                <div className={classes.buttons}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={resetState}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"primary\"\r\n                    onClick={filterData}\r\n                  >\r\n                    Apply\r\n                  </Button>\r\n                </div>\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default DrawerComponent","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CVE_Item } from \"../types\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\ninterface Column {\r\n  id: 'cve-id' | 'publishedDate' | 'severity' | 'description';\r\n  label: string;\r\n  minWidth?: number;\r\n  align?: 'right';\r\n}\r\n\r\n// table head items \r\nconst columns: Column[] = [\r\n  { id: 'cve-id', label: 'CVE ID', minWidth: 120 },\r\n  { id: 'publishedDate', label: 'PUBLISHED DATE', minWidth: 140 },\r\n  { id: 'severity', label: 'SEVERITY', minWidth: 100 },\r\n  { id: 'description', label: 'DESCRIPTION', minWidth: 140 },\r\n];\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\n\r\n\r\ninterface Props {\r\n  cveItemsToShow: CVE_Item[] | [];\r\n  foundByCVEID: CVE_Item[] | null;\r\n}\r\n\r\n\r\nconst CVETable: React.FC<Props> = (props: Props) => {\r\n  const { cveItemsToShow , foundByCVEID } = props;\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {// if user used search bar to search CVE this will be displayed first instead of cveItems to show\r\n              foundByCVEID && foundByCVEID.length <=10 ? foundByCVEID.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:CVE_Item) => {\r\n            return (\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.cve.CVE_data_meta.ID}>\r\n                {columns.map((column) => {\r\n                  // gets value from cve and assigns to value const\r\n                  const value:string | null = column.id === \"cve-id\" ? row.cve.CVE_data_meta.ID : column.id === \"publishedDate\" ? row.publishedDate.split(\"T\")[0] : column.id === \"severity\" ? row.impact.baseMetricV2?.severity || \"NOT LISTED\" : column.id === \"description\" ? row.cve.description.description_data[0].value : null \r\n                  return (\r\n                    <TableCell key={column.id} align={column.align}>\r\n                      {value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          }) : cveItemsToShow?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:CVE_Item) => {\r\n            return (\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.cve.CVE_data_meta.ID}>\r\n                {columns.map((column) => {\r\n                  const value:string | null = column.id === \"cve-id\" ? row.cve.CVE_data_meta.ID : column.id === \"publishedDate\" ? row.publishedDate.split(\"T\")[0] : column.id === \"severity\" ? row.impact.baseMetricV2?.severity || \"NOT LISTED\" : column.id === \"description\" ? row.cve.description.description_data[0].value : null\r\n                  return (\r\n                    <TableCell key={column.id} align={column.align}>\r\n                      {value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })\r\n          }\r\n            { // if not match this will be rendered\r\n              cveItemsToShow.length === 0 || foundByCVEID?.length === 0 ? <TableRow><TableCell>No CVE with this criteria</TableCell></TableRow> : null }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={foundByCVEID ? foundByCVEID.length : cveItemsToShow.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\nexport default CVETable","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CVE_Item } from \"../types\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: '100%',\r\n  },\r\n});\r\n\r\n\r\n\r\ninterface Props {\r\n  cveItemsToShow: CVE_Item[] | [];\r\n}\r\n\r\n\r\nconst Chart: React.FC<Props> = (props: Props) => {\r\n    const { cveItemsToShow } = props;\r\n    const classes = useStyles();\r\n\r\n    const xLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n\r\n    // maps cve-items by month\r\n    const byMonth = (severity:string) => {\r\n        return xLabels.map((label, index)=>(cveItemsToShow.filter((cve)=>(parseInt(cve.publishedDate.split(\"-\")[1],10) === index+1 && cve.impact.baseMetricV2?.severity === severity))))\r\n    }\r\n\r\n    const data = {\r\n        labels: xLabels,\r\n        datasets: [\r\n          {\r\n            label: 'Minor',\r\n            data: byMonth(\"LOW\").map((byMonth)=>(byMonth.length)),\r\n            fill: false,\r\n            backgroundColor: 'rgb(60, 179, 113)',\r\n            borderColor: 'rgb(60, 179, 113)',\r\n          },\r\n          {\r\n            label: 'Major',\r\n            data: byMonth(\"MEDIUM\").map((byMonth)=>(byMonth.length)),\r\n            fill: false,\r\n            backgroundColor: 'rgb(255, 165, 0)',\r\n            borderColor: 'rgb(255, 165, 0)',\r\n          },\r\n          {\r\n            label: 'Critical',\r\n            data: byMonth(\"HIGH\").map((byMonth)=>(byMonth.length)),\r\n            fill: false,\r\n            backgroundColor: 'rgb(255, 0, 0)',\r\n            borderColor: 'rgb(255, 0, 0)',\r\n          },\r\n        ],\r\n      };\r\n      \r\n      const options = {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      };\r\n\r\n\r\n  return (\r\n      <Paper className={classes.root}>\r\n          <div className={classes.container}>\r\n            <Line type=\"line\" data={data} options={options} />\r\n          </div>\r\n      </Paper>\r\n  );\r\n}\r\n\r\n\r\nexport default Chart","/// chart and tsx\r\nimport React, {useState} from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport { CVE_Item } from \"../types\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CVETable from './CVETable'\r\nimport Chart from './Chart'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex', // sita nutrinti jeigu noresi\r\n    },\r\n    drawer: {\r\n      width: 240,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      height: 'calc(100% - 64px)',\r\n      top: 64,\r\n      width:240,\r\n      [theme.breakpoints.up('xs')]: {\r\n        top: 56,\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        top: 64,\r\n      }\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Props {\r\n  cveItemsToShow: CVE_Item[] | [];\r\n  foundByCVEID: CVE_Item[] | null;\r\n}\r\n\r\nconst ChartAndTable: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { cveItemsToShow, foundByCVEID } = props;\r\n\r\n\r\n  return (\r\n    <div >\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        <CVETable  cveItemsToShow={cveItemsToShow} foundByCVEID={foundByCVEID}/>\r\n        <Toolbar/>\r\n        <Chart cveItemsToShow={cveItemsToShow}/>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ChartAndTable","import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport axios from 'axios'\n//tpes of the data\nimport { Data, CVE_Item } from \"./types\";\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\n//compnents\nimport NavBar from './components/NavBar'\nimport DrawerComponent from './components/DrawerComponent'\nimport ChartAndTable from './components/ChartAndTable'\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  //data fetched from json stored in this state\n  const [data, setData] = useState<Data | null>(null) // data or null arba as any\n  //Unique dates are scrapped of the data and stored in this state\n  const [dates, setDates] =useState<string[]>([])\n  //search state\n  const [foundByCVEID, setFoundByCVEID] = useState<CVE_Item[] | null>(null)\n\n  // drawer open state\n  const [drawerOpenState, setDrawerOpenState] = useState<boolean>(false)\n  //CVE items to show before and after filtering \n  const [cveItemsToShow, setCveItemsToShow] = useState<CVE_Item[]>([]) \n\n\n  //useEffect fetches data from the backend\n  useEffect(()=>{\n    const fetchData = async () => {\n      try {\n        const { data: DataFromApi } = await axios.get<Data>(\n          `/data`\n        );\n        const allDates = DataFromApi.CVE_Items.map((item) => { return item[\"publishedDate\"].split(\"-\")[0]; });\n        const uniqueDates = new Set(allDates)\n        setData(DataFromApi);\n        setCveItemsToShow(DataFromApi.CVE_Items)\n        setDates(Array.from(uniqueDates).sort())\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetchData();\n  },[])\n\n  \n  return (\n    <div className=\"App\">\n      <NavBar drawerOpenState={drawerOpenState} setDrawerOpenState={setDrawerOpenState} setFoundByCVEID={setFoundByCVEID} data={data?.CVE_Items}/>\n      <div className={classes.root}>\n        <DrawerComponent drawerOpenState={drawerOpenState} dates={dates} data={data?.CVE_Items} setCveItemsToShow={setCveItemsToShow} cveItemsToShow={cveItemsToShow}/>\n        <div className={classes.content}>\n          <ChartAndTable foundByCVEID={foundByCVEID} cveItemsToShow={cveItemsToShow}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}